📂 utils/
    - api_connector.py :
        - Binance에서 가격 데이터 가져오기 (get_binance_price)
        - Binance 계정 정보 조회 (get_binance_account_info)
        - LunarCrush에서 심리 데이터 가져오기 (get_lunarcrush_data)

📂 data/
    - data_loader.py :
        - Binance 가격 데이터를 JSON으로 저장 (save_binance_price)
        - LunarCrush 심리 데이터를 JSON으로 저장 (save_lunarcrush_data)
        - JSON 데이터를 Pandas DataFrame으로 변환 (json_to_dataframe)

📂 config/
    - config.json : 시스템 설정 파일
    - strategy_config.json : 트레이딩 전략 설정 파일
    - api_keys.json : API 키 파일 (Binance, LunarCrush 등)

📂 strategies/
    - market_sentiment.py :
        - LunarCrush 데이터를 활용한 시장 심리 분석 (analyze_market_sentiment)
        - 감성 점수를 기반으로 트레이딩 의사결정 데이터 생성

    - chart_analysis.py :
        - 이동평균선(SMA) 계산 (calculate_moving_average)
        - RSI(Relative Strength Index) 계산 (calculate_rsi)
        - 가격 데이터를 분석하여 chart_analysis_BTC.csv로 저장

    - signal_processing.py :
        - 이동평균선, RSI, 볼린저 밴드를 활용한 매매 신호 생성 (generate_trade_signal)
        - strategy_config.json 설정값을 기반으로 과매수/과매도 판단
        - 매매 신호를 JSON 형식으로 저장

    - trading_decision.py :
        - signal_processing.py에서 생성된 매매 신호를 로드
        - market_sentiment.py에서 시장 심리 데이터 로드
        - chart_analysis.py에서 기술적 분석 데이터 로드
        - 전략 설정값(strategy_config.json)에 따라 최종 트레이딩 결정 (LONG / SHORT / HOLD)

📂 system/
    - auto_trader.py :
        - trading_decision.py에서 최종 트레이딩 결정을 로드
        - Binance API를 활용하여 자동 매매 실행 (매수/매도 주문)
        - 주문 내역 저장 및 로깅 기능 추가

✅ 다음 구현 예정
    - 백테스트 시스템 (backtest_engine.py)
