### 1. 기본 구조 및 데이터 흐름 확립
- [ ] config 설정 (`config.json`, `api_keys.json` 등 설정 파일 준비)
- [ ] API 연결 (`api_connector.py`) → 바이낸스 & LunarCrush API에서 데이터 수집
- [ ] 데이터 로딩 (`data_loader.py`) → 데이터 저장 및 전처리

### 2. 분석 및 신호 생성 모듈 구축
- [ ] 시장 심리 분석 (`market_sentiment.py`)
  - 공포 & 탐욕 지수, 롱/숏 비율, 소셜 데이터 분석
- [ ] 차트 분석 (`chart_analysis.py`)
  - 이동평균선, RSI, 볼린저 밴드 분석
- [ ] 신호 생성 (`signal_processing.py`)
  - 시장 심리와 차트 분석 통합 후 롱/숏 신호 판단

### 3. 트레이딩 및 자동 매매 시스템 구축
- [ ] 최종 트레이딩 결정 (`trading_decision.py`)
  - 신호 기반으로 최종 매매 판단
- [ ] 자동 매매 시스템 (`auto_trader.py`)
  - 바이낸스 API를 통해 자동 거래 실행

### 4. 백테스트 시스템 구축
- [ ] 백테스트 엔진 개발 (`backtest_engine.py`)
  - 과거 데이터를 이용해 전략 검증
- [ ] 최적화 분석 (`optimization.py`)
  - 매개변수 튜닝을 통한 전략 개선

### 5. AI 기반 고도화 및 추가 기능
- [ ] 감성 분석 모델 개발 (`sentiment_model.py`)
  - 뉴스/트위터 데이터 활용
- [ ] 온체인 데이터 분석 (`on_chain_model.py`)
  - 온체인 데이터 기반 매매 전략 추가

### 6. 알림 시스템 및 유지보수
- [ ] 알림 시스템 구축 (`notifier.py`)
  - 거래 내역 및 경고 알림 전송
- [ ] 로깅 및 에러 처리 (`logger.py`)
  - 시스템 안정성을 위한 로깅 추가

### 7. 최종 테스트 및 배포
- [ ] 통합 테스트
- [ ] 실제 매매 환경 적용
