📌 **코인 자동 매매 시스템 개발 흐름도**  

1️⃣ **데이터 수집**  
    ├── api_connector.py → 바이낸스 및 LunarCrush API에서 실시간 데이터 수집  
    ├── data_loader.py → 수집된 데이터 정리 및 저장  
    └── data/  
        ├── raw/ → 원시 데이터 저장  
        ├── processed/ → 분석된 데이터 저장  
        └── historical/ → 과거 데이터 저장  

2️⃣ **시장 분석**  
    ├── market_sentiment.py → 공포 & 탐욕 지수, 롱/숏 비율, 소셜 미디어 데이터 분석  
    ├── chart_analysis.py → 이동평균선, RSI, 볼린저 밴드 등 기술적 분석  
    └── 분석 결과 저장  

3️⃣ **매매 신호 생성**  
    ├── signal_processing.py → 시장 심리 및 기술적 분석 데이터를 기반으로 롱/숏 신호 생성  
    ├── trading_decision.py → 최종 트레이딩 결정 (LONG / SHORT / HOLD)  
    └── signal_log 저장  

4️⃣ **자동 매매 실행**  
    ├── auto_trader.py → 트레이딩 신호에 따라 자동 매매 실행  
    ├── notifier.py → 트레이딩 실행 결과 알림 발송  
    ├── 실시간 거래 로그 기록  
    └── 시스템 오류 감지 및 예외 처리  

5️⃣ **대시보드 및 실시간 모니터링**  
    ├── dashboard_main.py → Streamlit 기반 대시보드 실행  
    ├── trade_signal_flow.py → 매매 신호 흐름 시각화  
    ├── chart_visualizer.py → RSI, 이동평균선, 볼린저 밴드 차트 시각화  
    ├── sentiment_analysis.py → 시장 심리 데이터 그래프 생성  
    ├── portfolio_tracker.py → 트레이딩 기록 및 수익률 변동 차트 표시  
    ├── data_fetcher.py → 실시간 가격 데이터 API 가져오기  
    └── update_manager.py → 실시간 데이터 업데이트 처리  

🔹 **추가 시각화 전략**  
    ├── trade_signal_flow.py → 신호 흐름을 실시간으로 분석  
    ├── chart_visualizer.py → 기술적 분석 지표 변화를 실시간으로 시각화  
    ├── sentiment_analysis.py → 공포 & 탐욕 지수 변화를 그래프화  
    └── 대시보드 실행 시 실시간 트레이딩 상태 확인  

🔹 **결과 기대 효과**  
    ✅ 매매 신호가 실시간으로 어떻게 결정되는지 한눈에 파악 가능  
    ✅ 전략이 정상적으로 작동하는지 트레이딩 로직 디버깅 가능  
    ✅ 자동 매매 실행 시, 시각적으로 매매 흐름을 확인하며 판단 가능  
