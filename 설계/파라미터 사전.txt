## **🚀 1️⃣ API 연동 및 데이터 수집 관련**  
| **파라미터**          | **설명**                                      | **예제 값**                |  
|----------------------|-----------------------------------------|--------------------------|  
| `API_KEY`            | Binance API 접근을 위한 키                  | `"your_api_key_here"`     |  
| `API_SECRET`         | Binance API 시크릿 키                      | `"your_secret_key_here"`  |  
| `BASE_URL`           | Binance API 기본 엔드포인트                 | `"https://api.binance.com"` |  
| `WEBSOCKET_URL`      | WebSocket 실시간 데이터 엔드포인트         | `"wss://stream.binance.com:9443/ws"` |  
| `SYMBOL`             | 거래 대상 종목 (BTC/USDT)                  | `"BTCUSDT"`               |  
| `TIMEFRAME`          | 캔들 데이터의 주기 (1분 단위)               | `"1m"`                    |  
| `FETCH_LIMIT`        | 한 번에 가져올 데이터 개수                  | `500`                      |  

---

## **🚀 2️⃣ 주문 관련 설정**  
| **파라미터**        | **설명**                                     | **예제 값**                 |  
|--------------------|----------------------------------------|--------------------------|  
| `ORDER_TYPE`       | 주문 유형 (`MARKET` 또는 `LIMIT`)       | `"MARKET"`               |  
| `TRADE_AMOUNT`     | 단일 트레이드 시 사용할 자금 비율 (%)     | `0.1` (잔고의 10%)         |  
| `STOP_LOSS`        | 손절매 비율 (%)                          | `0.5` (0.5% 하락 시 손절)  |  
| `TAKE_PROFIT`      | 목표 수익률 (%)                          | `1.0` (1% 상승 시 익절)    |  
| `SLIPPAGE_TOLERANCE` | 주문 체결 시 허용 슬리피지 (%)            | `0.05` (0.05% 이내 허용)   |  
| `MAX_ORDERS`       | 동시에 유지할 수 있는 최대 주문 개수       | `3`                        |  

---


## **🚀 3️⃣ 백테스트 및 데이터 처리 관련**  
| **파라미터**       | **설명**                                     | **예제 값**               |  
|-------------------|----------------------------------------|------------------------|  
| `BACKTEST_START`  | 백테스트 시작 날짜 (`YYYY-MM-DD`)         | `"2023-01-01"`         |  
| `BACKTEST_END`    | 백테스트 종료 날짜 (`YYYY-MM-DD`)         | `"2023-12-31"`         |  
| `INITIAL_BALANCE` | 백테스트 시작 시 가상 자본 (USD)         | `10000`                |  
| `DATA_STORAGE`    | 데이터 저장 방식 (`CSV`, `Parquet`)      | `"Parquet"`            |  
| `USE_DASK`        | Dask를 사용하여 데이터 병렬 처리 여부     | `True`                 |  
| `CACHE_ENABLED`   | 데이터 캐싱 활성화 여부 (`Redis 적용`)    | `True`                 |  

---

## **🚀 4️⃣ 강화학습 및 ML 관련**  
| **파라미터**        | **설명**                                     | **예제 값**             |  
|--------------------|----------------------------------------|----------------------|  
| `MODEL_TYPE`       | 사용할 모델 유형 (`DQN`, `PPO` 등)     | `"PPO"`              |  
| `EPISODES`        | 학습 반복 횟수                          | `1000`               |  
| `LEARNING_RATE`   | 학습률                                  | `0.001`              |  
| `GAMMA`           | 할인 계수 (`0 ~ 1` 사이 값)             | `0.99`               |  
| `BATCH_SIZE`      | 학습 배치 크기                          | `32`                 |  
| `TRAINING_MODE`   | `True`이면 학습, `False`면 평가 모드     | `True`               |  

---

## **🚀 5️⃣ 실시간 모니터링 및 대시보드 관련**  
| **파라미터**       | **설명**                                     | **예제 값**               |  
|-------------------|----------------------------------------|----------------------|  
| `DASHBOARD_REFRESH_RATE` | 대시보드 업데이트 주기 (초)        | `1`                   |  
| `USE_WEBSOCKET`   | WebSocket을 통한 실시간 데이터 여부   | `True`                |  
| `LOG_LEVEL`       | 로깅 수준 (`DEBUG`, `INFO` 등)        | `"INFO"`              |  
| `ALERT_THRESHOLD` | 알림 발생 기준 (손실 % 또는 위험 수준) | `-2.0` (2% 손실 시 경고) |  

---
