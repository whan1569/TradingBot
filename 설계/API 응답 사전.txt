### **📌 API 응답 사전 (Binance 전용, 1분 단위 트레이딩 최적화)**  

Binance API에서 받아오는 응답 데이터를 **Cursor가 쉽게 파싱**할 수 있도록 정리한 사전입니다.  
이 구조를 기반으로 데이터 처리를 최적화하고, 필요한 값만 빠르게 추출할 수 있도록 합니다.  

---

## **1️⃣ 일반 정보 API 응답**  
### ✅ **거래 가능 자산 조회 (`GET /api/v3/exchangeInfo`)**  
**📌 주요 데이터 필드**  
| 필드명        | 데이터 타입 | 설명 |  
|--------------|------------|--------------------------------------------------|  
| `symbols`    | List       | 거래 가능한 모든 심볼 리스트 |  
| `baseAsset`  | String     | 기초 자산 (예: `BTC`) |  
| `quoteAsset` | String     | 거래 상대 자산 (예: `USDT`) |  
| `status`     | String     | `TRADING` 상태일 때 거래 가능 |  

**📌 응답 예시**  
```json
{
  "symbols": [
    {
      "symbol": "BTCUSDT",
      "baseAsset": "BTC",
      "quoteAsset": "USDT",
      "status": "TRADING"
    },
    {
      "symbol": "ETHUSDT",
      "baseAsset": "ETH",
      "quoteAsset": "USDT",
      "status": "TRADING"
    }
  ]
}
```

---

## **2️⃣ 계좌 정보 API 응답**  
### ✅ **잔고 조회 (`GET /api/v3/account`)**  
**📌 주요 데이터 필드**  
| 필드명      | 데이터 타입 | 설명 |  
|------------|------------|------------------------------|  
| `balances` | List       | 보유 자산 리스트 |  
| `asset`    | String     | 자산명 (예: `BTC`, `USDT`) |  
| `free`     | Float      | 사용 가능한 잔고 |  
| `locked`   | Float      | 주문에 묶인 잔고 |  

**📌 응답 예시**  
```json
{
  "balances": [
    {
      "asset": "BTC",
      "free": "0.005",
      "locked": "0.0001"
    },
    {
      "asset": "USDT",
      "free": "1500.00",
      "locked": "50.00"
    }
  ]
}
```

---

## **3️⃣ 시세 정보 API 응답**  
### ✅ **현재 가격 조회 (`GET /api/v3/ticker/price`)**  
**📌 주요 데이터 필드**  
| 필드명   | 데이터 타입 | 설명 |  
|---------|------------|------------------------------|  
| `symbol` | String    | 거래 심볼 (예: `BTCUSDT`) |  
| `price`  | Float     | 현재 가격 |  

**📌 응답 예시**  
```json
{
  "symbol": "BTCUSDT",
  "price": "45000.00"
}
```

---

## **4️⃣ 주문 관련 API 응답**  
### ✅ **시장가 주문 (`POST /api/v3/order`)**  
**📌 주요 데이터 필드**  
| 필드명        | 데이터 타입 | 설명 |  
|--------------|------------|------------------------------|  
| `symbol`     | String     | 거래 심볼 (예: `BTCUSDT`) |  
| `orderId`    | Integer    | 주문 ID |  
| `status`     | String     | 주문 상태 (`NEW`, `FILLED`, `CANCELED` 등) |  
| `executedQty`| Float      | 체결된 수량 |  
| `cummulativeQuoteQty` | Float | 총 체결 금액 (예: `1000.00`) |  

**📌 응답 예시**  
```json
{
  "symbol": "BTCUSDT",
  "orderId": 12345678,
  "status": "FILLED",
  "executedQty": "0.01",
  "cummulativeQuoteQty": "450.00"
}
```

---

## **5️⃣ 실시간 WebSocket 응답**  
### ✅ **실시간 가격 데이터 (`@ticker`)**  
**📌 주요 데이터 필드**  
| 필드명   | 데이터 타입 | 설명 |  
|---------|------------|------------------------------|  
| `e`     | String     | 이벤트 타입 (`24hrTicker`) |  
| `s`     | String     | 거래 심볼 (예: `BTCUSDT`) |  
| `c`     | Float      | 현재 가격 |  
| `v`     | Float      | 24시간 거래량 |  

**📌 응답 예시**  
```json
{
  "e": "24hrTicker",
  "s": "BTCUSDT",
  "c": "45000.00",
  "v": "12345.67"
}
```

---

### **📌 결론**  
- **Cursor가 쉽게 이해할 수 있도록 필드별 데이터 타입, 설명, 예시 포함**  
- **주요 Binance API 응답 구조 반영 → 빠르게 필요한 데이터 파싱 가능**  
- **1분 단위 트레이딩 적용을 위한 필수 API만 정리 → 불필요한 데이터 최소화**  

이제 API 요청 사전도 같은 스타일로 정리하겠습니다. 🚀