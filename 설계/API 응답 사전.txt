

## **1️⃣ 일반 정보 API 응답**  
### ✅ **거래 가능 자산 조회 (`GET /api/v3/exchangeInfo`)**  
**📌 주요 데이터 필드**  
| 필드명        | 데이터 타입 | 설명 |  
|--------------|------------|--------------------------------------------------|  
| `symbols`    | List       | 거래 가능한 모든 심볼 리스트 |  
| `baseAsset`  | String     | 기초 자산 (예: `BTC`) |  
| `quoteAsset` | String     | 거래 상대 자산 (예: `USDT`) |  
| `status`     | String     | `TRADING` 상태일 때 거래 가능 |  

**📌 응답 예시**  
```json
{
  "symbols": [
    {
      "symbol": "BTCUSDT",
      "baseAsset": "BTC",
      "quoteAsset": "USDT",
      "status": "TRADING"
    },
    {
      "symbol": "ETHUSDT",
      "baseAsset": "ETH",
      "quoteAsset": "USDT",
      "status": "TRADING"
    }
  ]
}
```

---

## **2️⃣ 계좌 정보 API 응답**  
### ✅ **잔고 조회 (`GET /api/v3/account`)**  
**📌 주요 데이터 필드**  
| 필드명      | 데이터 타입 | 설명 |  
|------------|------------|------------------------------|  
| `balances` | List       | 보유 자산 리스트 |  
| `asset`    | String     | 자산명 (예: `BTC`, `USDT`) |  
| `free`     | Float      | 사용 가능한 잔고 |  
| `locked`   | Float      | 주문에 묶인 잔고 |  

**📌 응답 예시**  
```json
{
  "balances": [
    {
      "asset": "BTC",
      "free": "0.005",
      "locked": "0.0001"
    },
    {
      "asset": "USDT",
      "free": "1500.00",
      "locked": "50.00"
    }
  ]
}
```

---

## **3️⃣ 시세 정보 API 응답**  
### ✅ **현재 가격 조회 (`GET /api/v3/ticker/price`)**  
**📌 주요 데이터 필드**  
| 필드명   | 데이터 타입 | 설명 |  
|---------|------------|------------------------------|  
| `symbol` | String    | 거래 심볼 (예: `BTCUSDT`) |  
| `price`  | Float     | 현재 가격 |  

**📌 응답 예시**  
```json
{
  "symbol": "BTCUSDT",
  "price": "45000.00"
}
```

---

## **4️⃣ 주문 관련 API 응답**  
### ✅ **시장가 주문 (`POST /api/v3/order`)**  
**📌 주요 데이터 필드**  
| 필드명        | 데이터 타입 | 설명 |  
|--------------|------------|------------------------------|  
| `symbol`     | String     | 거래 심볼 (예: `BTCUSDT`) |  
| `orderId`    | Integer    | 주문 ID |  
| `status`     | String     | 주문 상태 (`NEW`, `FILLED`, `CANCELED` 등) |  
| `executedQty`| Float      | 체결된 수량 |  
| `cummulativeQuoteQty` | Float | 총 체결 금액 (예: `1000.00`) |  

**📌 응답 예시**  
```json
{
  "symbol": "BTCUSDT",
  "orderId": 12345678,
  "status": "FILLED",
  "executedQty": "0.01",
  "cummulativeQuoteQty": "450.00"
}
```

---

## **5️⃣ 실시간 WebSocket 응답**  
### ✅ **실시간 가격 데이터 (`@ticker`)**  
**📌 주요 데이터 필드**  
| 필드명   | 데이터 타입 | 설명 |  
|---------|------------|------------------------------|  
| `e`     | String     | 이벤트 타입 (`24hrTicker`) |  
| `s`     | String     | 거래 심볼 (예: `BTCUSDT`) |  
| `c`     | Float      | 현재 가격 |  
| `v`     | Float      | 24시간 거래량 |  

**📌 응답 예시**  
```json
{
  "e": "24hrTicker",
  "s": "BTCUSDT",
  "c": "45000.00",
  "v": "12345.67"
}
```

---
현재 **API 응답 사전**은 **Cursor가 데이터를 쉽게 파싱**할 수 있도록 **필드별 데이터 타입, 설명, 예시가 명확하게 정리**되어 있어서 그대로 가져가도 문제는 없습니다.  

다만, **설계가 변경되면서 추가하면 좋을 내용**이 있을 수 있으니 몇 가지 **보완할 사항**을 제안합니다.  

---

## **📌 추가하면 좋을 내용**  

### **6 `GET /api/v3/myTrades` (거래 내역 조회) 추가**  
**이유:**  
- 트레이딩 봇이 과거 체결된 주문 내역을 분석할 때 필요  
- 체결 가격, 수량, 수수료 정보 등 필수 데이터 포함  

📌 **주요 필드 추가**  
| 필드명         | 데이터 타입 | 설명 |  
|--------------|------------|------------------------------|  
| `symbol`     | String     | 거래 심볼 (예: `BTCUSDT`) |  
| `orderId`    | Integer    | 주문 ID |  
| `price`      | Float      | 체결 가격 |  
| `qty`        | Float      | 체결 수량 |  
| `commission` | Float      | 수수료 |  
| `commissionAsset` | String | 수수료 자산 (`BNB`, `USDT` 등) |  
| `time`       | Integer    | 체결 시간 (timestamp) |  

📌 **응답 예시**  
```json
[
  {
    "symbol": "BTCUSDT",
    "orderId": 12345678,
    "price": "45000.00",
    "qty": "0.01",
    "commission": "0.0001",
    "commissionAsset": "BNB",
    "time": 1708000000000
  }
]
```

---

### **7 `GET /api/v3/openOrders` (미체결 주문 조회) 추가**  
**이유:**  
- 현재 미체결된 주문을 조회해서 트레이딩 전략을 조정할 때 필요  
- 기존 주문을 확인하고 중복 주문을 방지  

📌 **주요 필드 추가**  
| 필드명        | 데이터 타입 | 설명 |  
|--------------|------------|------------------------------|  
| `symbol`     | String     | 거래 심볼 (예: `BTCUSDT`) |  
| `orderId`    | Integer    | 주문 ID |  
| `status`     | String     | 주문 상태 (`NEW`, `PARTIALLY_FILLED` 등) |  
| `price`      | Float      | 주문 가격 |  
| `origQty`    | Float      | 주문한 수량 |  
| `executedQty`| Float      | 체결된 수량 |  
| `time`       | Integer    | 주문 시간 (timestamp) |  

📌 **응답 예시**  
```json
[
  {
    "symbol": "BTCUSDT",
    "orderId": 12345679,
    "status": "NEW",
    "price": "45050.00",
    "origQty": "0.02",
    "executedQty": "0.00",
    "time": 1708000005000
  }
]
```

---

### **8 `DELETE /api/v3/order` (주문 취소) 추가**  
**이유:**  
- 트레이딩 봇이 주문을 자동으로 취소할 수 있도록 API 제공  
- **미체결 주문을 제거하고 새로운 전략을 실행할 때 필수적**  

📌 **주요 필드 추가**  
| 필드명    | 데이터 타입 | 설명 |  
|----------|------------|------------------------------|  
| `symbol` | String     | 거래 심볼 (예: `BTCUSDT`) |  
| `orderId` | Integer   | 취소할 주문 ID |  
| `status`  | String    | 취소된 주문 상태 (`CANCELED`) |  

📌 **응답 예시**  
```json
{
  "symbol": "BTCUSDT",
  "orderId": 12345679,
  "status": "CANCELED"
}
```

---

### **9 WebSocket 실시간 체결 데이터 (`@trade`) 추가**  
**이유:**  
- 현재는 `@ticker`를 사용하지만, **실시간 체결 데이터를 직접 활용하면 더 빠른 트레이딩 가능**  
- 기존 `@ticker`보다 **거래량과 체결 방향 정보를 포함**하여 더 정밀한 전략 적용 가능  

📌 **주요 필드 추가**  
| 필드명   | 데이터 타입 | 설명 |  
|---------|------------|------------------------------|  
| `e`     | String     | 이벤트 타입 (`trade`) |  
| `s`     | String     | 거래 심볼 (예: `BTCUSDT`) |  
| `p`     | Float      | 체결 가격 |  
| `q`     | Float      | 체결 수량 |  
| `b`     | Integer    | 매수 주문 ID |  
| `a`     | Integer    | 매도 주문 ID |  
| `T`     | Integer    | 체결 시간 (timestamp) |  

📌 **응답 예시**  
```json
{
  "e": "trade",
  "s": "BTCUSDT",
  "p": "45005.00",
  "q": "0.002",
  "b": 123456,
  "a": 654321,
  "T": 1708000010000
}
```

---

### **🔟 `GET /api/v3/klines` (캔들 데이터 조회) 추가**  
**이유:**  
- 백테스트 및 트렌드 분석에 필수  
- **1분 단위 트레이딩 최적화**를 위해 최근 캔들 데이터를 빠르게 받아올 필요 있음  

📌 **주요 필드 추가**  
| 필드명   | 데이터 타입 | 설명 |  
|---------|------------|------------------------------|  
| `t`     | Integer    | 캔들 시작 시간 (timestamp) |  
| `o`     | Float      | 시가 (Open Price) |  
| `h`     | Float      | 고가 (High Price) |  
| `l`     | Float      | 저가 (Low Price) |  
| `c`     | Float      | 종가 (Close Price) |  
| `v`     | Float      | 거래량 (Volume) |  

📌 **응답 예시 (1분 캔들 데이터)**  
```json
[
  [
    1708000020000,  // 캔들 시작 시간 (timestamp)
    "45000.00",     // 시가
    "45010.00",     // 고가
    "44980.00",     // 저가
    "45005.00",     // 종가
    "12.345"        // 거래량
  ]
]
```

---

### **1️⃣1️⃣ `GET /api/v3/depth` (호가창 조회) 추가**  
**이유:**  
- **유동성 분석 및 매매 전략 최적화**  
- 매수/매도 호가 정보를 활용해 **스프레드 분석 및 슬리피지 방지 가능**  

📌 **주요 필드 추가**  
| 필드명  | 데이터 타입 | 설명 |  
|--------|------------|------------------------------|  
| `bids` | List      | 매수 주문 리스트 (`[가격, 수량]`) |  
| `asks` | List      | 매도 주문 리스트 (`[가격, 수량]`) |  

📌 **응답 예시 (호가창 Top 5)**  
```json
{
  "bids": [
    ["45000.00", "1.5"],
    ["44995.00", "0.8"],
    ["44990.00", "0.3"]
  ],
  "asks": [
    ["45010.00", "2.0"],
    ["45015.00", "1.2"],
    ["45020.00", "0.5"]
  ]
}
```

---

### **1️⃣2️⃣ `GET /sapi/v1/margin/account` (마진 계정 잔고 조회) 추가**  
**이유:**  
- 향후 **마진 트레이딩을 고려할 경우 필수적인 API**  
- 마진 잔고와 차입금, 이자율 등의 정보 확인 가능  

📌 **주요 필드 추가**  
| 필드명   | 데이터 타입 | 설명 |  
|---------|------------|------------------------------|  
| `asset` | String     | 자산명 (예: `BTC`, `USDT`) |  
| `free`  | Float      | 사용 가능한 잔고 |  
| `borrowed` | Float   | 차입한 금액 |  
| `interest` | Float   | 발생한 이자 |  

📌 **응답 예시**  
```json
{
  "userAssets": [
    {
      "asset": "BTC",
      "free": "0.002",
      "borrowed": "0.001",
      "interest": "0.00001"
    }
  ]
}
```

---

### **1️⃣3️⃣ `GET /sapi/v1/margin/interestRate` (마진 이자율 조회) 추가**  
**이유:**  
- **마진 트레이딩 시 이자 비용을 고려한 전략 설계 필요**  
- 특정 자산의 마진 이자율을 실시간으로 확인 가능  

📌 **주요 필드 추가**  
| 필드명       | 데이터 타입 | 설명 |  
|-------------|------------|------------------------------|  
| `asset`     | String     | 자산명 (예: `BTC`, `USDT`) |  
| `dailyInterestRate` | Float | 일일 이자율 |  

📌 **응답 예시**  
```json
{
  "asset": "BTC",
  "dailyInterestRate": "0.0005"
}
```

---

### **1️⃣4️⃣ `GET /sapi/v1/futures/positionRisk` (선물 포지션 조회) 추가**  
**이유:**  
- **레버리지 트레이딩을 고려할 경우**, 선물 포지션의 위험도를 분석하는 데 필요  
- 미청산 계약(포지션) 정보를 제공  

📌 **주요 필드 추가**  
| 필드명        | 데이터 타입 | 설명 |  
|--------------|------------|------------------------------|  
| `symbol`     | String     | 거래 심볼 (예: `BTCUSDT`) |  
| `positionAmt`| Float      | 포지션 크기 (양수: 롱, 음수: 숏) |  
| `entryPrice` | Float      | 평균 진입 가격 |  
| `unRealizedProfit` | Float | 미실현 손익 |  
| `leverage`   | Integer    | 설정된 레버리지 배율 |  

📌 **응답 예시**  
```json
{
  "symbol": "BTCUSDT",
  "positionAmt": "0.05",
  "entryPrice": "45000.00",
  "unRealizedProfit": "10.00",
  "leverage": 10
}
```

---
